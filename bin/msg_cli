#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# vim: set ft=sh et ts=4 sw=4 sts=4:

# TODO: Make this zsh autocomplet function
# Helper function bin to stdout message colorful
# Usages:
#
# As header
# msg_cli green "OK" header
# msg_cli g "OK"
#
# Normal:
# msg_cli green "OK" normal
# msg_cli g "OK" n


# Colors {{{

# Not compatible, solution:
# http://mywiki.wooledge.org/BashFAQ/037
#
# COLOR_NONE="\e[0m"
# COLOR_WHITE="\e[1;37m"
# COLOR_RED="\e[0;31m"
# COLOR_BLUE="\e[0;34m"
# COLOR_GREEN="\e[0;32m"
# COLOR_YELLOW="\e[1;33m"
# COLOR_BROWN="\e[0;33m"
# COLOR_PINK="\e[0;35m"
# COLOR_CYAN="\e[0;36m"
# COLOR_PURPLE="\e[0;35m"
# COLOR_BLACK="\e[0;30m"
# COLOR_LIGHTGRAY="\e[0;37m"
# COLOR_DARKGRAY="\e[1;30m"
# COLOR_LIGHTBLUE="\e[1;34m"
# COLOR_LIGHTGREEN="\e[1;32m"
# COLOR_LIGHTCYAN="\e[1;36m"
# COLOR_LIGHTRED="\e[1;31m"
# COLOR_LIGHTPURPLE="\e[1;35m"
#
COLOR_BLUE=$(tput setaf 4)
COLOR_RED=$(tput setaf 1)
COLOR_GREEN=$(tput setaf 2)
COLOR_YELLOW=$(tput setaf 3)
COLOR_CYAN=$(tput setaf 6)
COLOR_MAGENTA=$(tput setaf 5)
COLOR_WHITE=$(tput setaf 15)
COLOR_RESET=$(tput sgr0)
# }}}


# Center the text with a surrounding border
# first argument: color
# second argument: text to show
# Usage:
# $ _center_text blue "Something I want to print"
_center_text() {
    local color=${1}
    local text="${2}"
    local text_width=${#2}

    local term_width=$(tput cols)
    local ch="-"
    local padding="$(printf '%0.1s' ${ch}{1..50})"

    # TODO: Make better way
    # Adapt large/medium/small window sizes
    if [ $term_width -ge 200 ]; then
        local print_width=$(tput cols)*4/10
    elif [ $term_width -ge 120 ]; then
        local print_width=$(tput cols)*6/10
    else
        local print_width=${term_width}
    fi

    printf '%s%*.*s %s %*.*s%s\n' \
        "${color}" \
        0 \
        "$(((print_width-2-text_width)/2))" \
        "${padding}" \
        "${text}" \
        0 \
        "$(((print_width-1-text_width)/2))" \
        "${padding}" \
        "${COLOR_RESET}"
}

main() {
    if [ $# -ge 2 ]; then
        local _color=${1:-white}
        local message=$2
        local type=${3:-header}

        case $_color in
            b|blue) color=${COLOR_BLUE} ;;
            g|green) color=${COLOR_GREEN} ;;
            r|red) color=${COLOR_RED} ;;
            y|yellow) color=${COLOR_YELLOW} ;;
            c|cyan) color=${COLOR_CYAN} ;;
            m|magenta) color=${COLOR_MAGENTA} ;;
            w|white) color=${COLOR_WHITE} ;;
            *) color=${COLOR_WHITE} ;;
        esac

        case $type in
            h|header) _center_text "${color}" "${message}" ;;
            n|normal) echo -e "${color}${message}${COLOR_RESET}" ;;
            *) _center_text "${color}" "${message}" ;;
        esac
    else
        local message=${1:?Message needed!}

        echo -e "${color}${message}${COLOR_RESET}"
    fi
}

main "$@"
