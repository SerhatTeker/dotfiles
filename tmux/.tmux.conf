#                   _                                          __
#                  | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#                  | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#                  | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#                 (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#
#
# Author: Serhat Teker <serhat.teker@gmail.com>
# Source: https://github.com/SerhatTeker/dotfiles

# Powerline Cyan - Tmux Theme
# Created by Jim Myhrberg <contact@jimeh.me>.
#
# Inspired by vim-powerline: https://github.com/Lokaltog/powerline
#
# Requires terminal to be using a powerline compatible font, find one here:
# https://github.com/Lokaltog/powerline-fonts


#-------------------------------------------------------#
# SETTINGS	{{{1
#-------------------------------------------------------#
# Status update interval
set -g status-interval 1

# Default shell/path {{{2

# default-shell path
# set -g default-shell ${SHELL}

# default-command shell-command
# instead of using login shell -by default, use non-login shell
set -g default-command zsh
# }}}2

# Colors {{{2

# Basic status bar colors
set -g status-fg colour240
set -g status-bg colour233
# Left side of status bar
set -g status-left-bg colour233
set -g status-left-fg colour243
set -g status-left-length 40
set -g status-left "#[fg=colour232,bg=colour39,bold] #S #[fg=colour39,bg=colour240,nobold]#[fg=colour233,bg=colour240] #(whoami) #[fg=colour240,bg=colour235]#[fg=colour240,bg=colour235] #I:#P #[fg=colour235,bg=colour233,nobold]"
# Right side of status bar
set -g status-right-bg colour233
set -g status-right-fg colour243
set -g status-right-length 150
set -g status-right "#[fg=colour235,bg=colour233]#[fg=colour240,bg=colour235] %H:%M:%S #[fg=colour240,bg=colour235]#[fg=colour233,bg=colour240] %d-%b-%y #[fg=colour245,bg=colour240]#[fg=colour232,bg=colour245,bold] #H "
# Window status
set -g window-status-format "  #I:#W#F  "
set -g window-status-current-format "#[fg=colour233,bg=black]#[fg=colour81,nobold] #I:#W#F #[fg=colour233,bg=black,nobold]"
# Current window status
set -g window-status-current-bg colour39
set -g window-status-current-fg colour235

# Window with activity status
set -g window-status-activity-bg colour245 # fg and bg are flipped here due to
set -g window-status-activity-fg colour233 # a bug in tmux

# Pane colors {{{3

# set inactive/active window styles
# window-active-style default color #1325
# https://github.com/tmux/tmux/issues/1325
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour252,bg=colour233'
# alternative
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour255,bg=colour234'

# Pane border
# defaults
set -g pane-border-bg default
set -g pane-border-fg colour238
# alternative
# set -g pane-border-bg colour235
# set -g pane-border-fg colour238

# Active pane border
# defaults
set -g pane-active-border-bg default
set -g pane-active-border-fg blue
# alternative
# set -g pane-active-border-bg colour236
# set -g pane-active-border-fg colour51
# }}}3

# bash colors
set -g default-terminal "screen-256color"

# Pane number indicator
set -g display-panes-colour colour233
set -g display-panes-active-colour colour245

# Clock mode
set -g clock-mode-colour colour39
set -g clock-mode-style 24

# Message
set -g message-bg colour39
set -g message-fg black

# Command message
set -g message-command-bg colour233
set -g message-command-fg black

# Mode
set -g mode-bg colour39
set -g mode-fg colour232

# vim <esc> time delay disable
set -sg escape-time 0

# Ensure terminal starts with its own colour scheme (helps Vim/Neovim themes to not break)
set -g default-terminal "xterm-256color"
# # set -g default-terminal "screen-256color" # no S-Fx keys ;-(
# # and ensure the key-codes are xterm alike
set -g xterm-keys on
# }}}2

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify centre

# vi is good
setw -g mode-keys vi

# mouse behavior
set -g mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on

# reorder windows
# auto renumber
set-option -g renumber-windows on
#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#

#-------------------------------------------------------#
#      MAPPINGS {{{1
#-------------------------------------------------------#

# prefix
unbind C-b
set -g prefix C-a

# split windows {{{2

# duplicate current path
# horizontally
bind | split-window -h -c "#{pane_current_path}"
# vertically
bind - split-window -v -c "#{pane_current_path}"
# new window
bind c new-window  -c "#{pane_current_path}"

# defaults
# # Split panes horizontal
# bind | split-window -h
# # Split panes vertically
# bind - split-window -v
# }}}2

# pane layout alignment {{{2
bind V select-layout even-vertical
bind H select-layout even-horizontal
# }}}2

# reload tmux config
bind R source-file ~/.tmux.conf \; display-message "Tmux config file reloaded."

# reorder windows {{{£
# manual renumber key binding
# bind o move-window -r\; display-message "Windows reordered..."
# }}}2

# navigate panes with vim keys {{{2
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# }}}2

# copy paste {{{2

# start: leader + [
# select and yank: v and y
# quit: q
# paste: leader + P
bind P paste-buffer
# bind Y paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# }}}2
#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#

#-------------------------------------------------------#
#      PLUGINS	{{{1
#-------------------------------------------------------#

# List of plugins {{{

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# }}}

# tmux-resurrect-1 {{{

# mappings
set -g @resurrect-restore 'C-R'
set -g @resurrect-save 'C-Y'
# neovim sessions
set -g @resurrect-strategy-nvim 'session'
# }}}

# tmux-vim-navigator {{{

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Restoring Clear Screen (C-l)
# Enabled you can use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'
# }}}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# tmux-resurrect-2 {{{

# restart tmux-resurrect after reboot
# using alias `mux` instead of this, since it creates additional session
# run -b '~/.tmux/plugins/tmux-resurrect/scripts/restore.sh r'
# }}}
#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#
