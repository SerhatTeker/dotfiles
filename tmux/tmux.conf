#                   _                                          __
#                  | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#                  | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#                  | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#                 (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#
#
# Author: Serhat Teker <serhat.teker@gmail.com>
# Source: https://github.com/SerhatTeker/dotfiles
#
#-------------------------------------------------------#
# SETTINGS	{{{1
#-------------------------------------------------------#
# Status update interval
set -g status-interval 1

# Default shell/path {{{2

# default-shell path
# set -g default-shell ${SHELL}

# default-command shell-command
# instead of using login shell -by default, use non-login shell
# set -g default-command zsh
# }}}2

# Colors {{{2

# **Disabled** since setting colors from **tmuxline.vim**
# Getting colors from tmux-themepack
# if-shell "test -e ~/.config/tmux/colors/dark.conf" "source-file ~/.config/tmux/colors/dark.conf"

# Active-Inactive {{{
#
# **Now controlled from Nvim**

# set inactive/active window styles
# window-active-style default color #1325
# https://github.com/tmux/tmux/issues/1325
#
# default - works with onedark/neodark
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour252,bg=colour234'
# alternative
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour255,bg=colour234'
# }}}
# }}}

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify centre

# vi is good
setw -g mode-keys vi

# mouse behavior
set -g mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on

# reorder windows
# auto renumber
set-option -g renumber-windows on

# order sessions
bind s choose-tree -GswZ -O index

# vim <esc> time delay disable
set -sg escape-time 0

# Ensure terminal starts with its own colour scheme (helps Vim/Neovim themes to not break)
# For iterm2 use below xterm-256color
# set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"

# # set -g default-terminal "screen-256color" # no S-Fx keys ;-(
# # and ensure the key-codes are xterm alike
# set -g xterm-keys on
#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#

#-------------------------------------------------------#
#      MAPPINGS {{{1
#-------------------------------------------------------#

# Prefix. Use <C-a> instead of <C-b>
unbind C-b
set -g prefix C-a

# reload tmux config {{{

bind C-r source-file ~/.config/tmux/tmux.conf \; display-message "Tmux config file reloaded."
# tmux version < 3.1
# bind C-r source-file ~/.tmux.conf \; display-message "Tmux config file reloaded."
# }}}

# split windows {{{2

# duplicate current path
# horizontally
bind | split-window -h -c "#{pane_current_path}"
# vertically
bind - split-window -v -c "#{pane_current_path}"
# new window
bind c new-window  -c "#{pane_current_path}"

# defaults
# # Split panes horizontal
# bind | split-window -h
# # Split panes vertically
# bind - split-window -v
# }}}2

# floating windows {{{

# Open default floating window on $pwd
bind C-w display-popup
# -E closes the popup automatically when shell-command exits.
# Two -E closes the popup only if shell-command exited with
# success.
# }}}

# pane layout alignment {{{2
bind V select-layout even-vertical
bind H select-layout even-horizontal
# }}}2

# reload tmux config {{{

bind C-r source-file ~/.config/tmux/tmux.conf \; display-message "Tmux config file reloaded."
# tmux version < 3.1
# bind C-r source-file ~/.tmux.conf \; display-message "Tmux config file reloaded."
# }}}

# resize pane  {{{

# Resize the selected pane using Alt + direction
bind M-h resize-pane -L 50
bind M-j resize-pane -D 20
bind M-k resize-pane -U 20
bind M-l resize-pane -R 50
# }}}

# reorder windows {{{

# manual renumber key binding
# bind o move-window -r\; display-message "Windows reordered..."
# }}}2

# navigation {{{

# Windows navigation
# Use m instead of p
bind-key C-n next-window
bind-key C-m previous-window

# Session Navigation with fzf
bind C-j display-popup -E "tmux list-sessions \
    | sed -E 's/:.*$//' \
    | grep -v \"^$(tmux display-message -p '#S')\$\" \
    | fzf --reverse | xargs tmux switch-client -t"

# Panes navigation with vim keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# }}}

# copy paste {{{2

# start: leader + [
# select and yank: v and y
# quit: q
# paste: leader + P
bind P paste-buffer
# bind Y paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# }}}2
#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#

#-------------------------------------------------------#
#      PLUGINS	{{{1
#-------------------------------------------------------#

# Plugin root directory is ~/.local/share/tmux | $XDG_DATA_HOME
# If you change it update mux alias among below related lines as well

# Changing plugins install dir
# https://github.com/tmux-plugins/tpm/blob/master/docs/changing_plugins_install_dir.md
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'

# List of plugins {{{

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# }}}

# tmux-resurrect-1 {{{

# mappings
set -g @resurrect-restore 'E'
set -g @resurrect-save 'Y'
# neovim sessions
set -g @resurrect-strategy-nvim 'session'

# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/save_dir.md#resurrect-save-dir
# default ~/.tmux/resurrect
set -g @resurrect-dir '~/.local/share/tmux/resurrect/sessions'
# }}}

# tmux-vim-navigator {{{

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Restoring Clear Screen (C-l)
# Enabled you can use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'
# }}}

# Automatic tpm installation
# https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
if "test ! -d ~/.local/share/tmux/plugins/tpm" \
    "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm && ~/.local/share/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.local/share/tmux/plugins/tpm/tpm'

# tmux-resurrect-2 {{{

# restart tmux-resurrect after reboot
# using alias `mux` instead of this, since it creates additional session
# run -b '~/.tmux/plugins/tmux-resurrect/scripts/restore.sh r'
# }}}
#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#
